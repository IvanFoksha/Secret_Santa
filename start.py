from telegram import Update
from telegram.ext import ContextTypes
from keyboards import get_main_menu_keyboard
from rooms import join_room, handle_room_creation
from wishes import create_wish, edit_wish_handler, list_wishes
from database import add_user


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    add_user(
        telegram_id=user.id,
        username=user.username,
        first_name=user.first_name,
        last_name=user.last_name
    )
    
    welcome_message = (
        f"üéÑ –ü—Ä–∏–≤–µ—Ç, {user.first_name}! üéÖ\n\n"
        "–Ø —Ç–≤–æ–π –≤–æ–ª—à–µ–±–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ "
        "–Ω–æ–≤–æ–≥–æ–¥–Ω–µ–≥–æ –æ–±–º–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞–º–∏! ‚ú®\n\n"
        "–°–æ –º–Ω–æ–π —Ç—ã —Å–º–æ–∂–µ—à—å:\n"
        "üéÅ –°–æ–∑–¥–∞—Ç—å –≤–æ–ª—à–µ–±–Ω—É—é –∫–æ–º–Ω–∞—Ç—É –¥–ª—è –æ–±–º–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞–º–∏\n"
        "üë• –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –¥—Ä—É–∑—å—è–º –≤ –∏—Ö –∫–æ–º–Ω–∞—Ç–µ\n"
        "üìù –ó–∞–≥–∞–¥–∞—Ç—å —Å–≤–æ–∏ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–µ –∂–µ–ª–∞–Ω–∏—è\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ –∏ –Ω–∞—á–Ω–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–µ —á—É–¥–æ! üéÑ‚ú®"
    )
    
    await update.message.reply_text(
        welcome_message,
        reply_markup=get_main_menu_keyboard()
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "üéÑ *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:*\n\n"
        "1. *–°–æ–∑–¥–∞–Ω–∏–µ –≤–æ–ª—à–µ–±–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã:*\n"
        "   - –ù–∞–∂–º–∏ 'üéÅ –°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É'\n"
        "   - –í—ã–±–µ—Ä–∏ –≤–µ—Ä—Å–∏—é (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è/PRO)\n"
        "   - –ü–æ–ª—É—á–∏ –≤–æ–ª—à–µ–±–Ω—ã–π –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã\n\n"
        "2. *–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –¥—Ä—É–∑—å—è–º:*\n"
        "   - –ù–∞–∂–º–∏ 'üîç –ù–∞–π—Ç–∏ –∫–æ–º–Ω–∞—Ç—É'\n"
        "   - –í–≤–µ–¥–∏ –≤–æ–ª—à–µ–±–Ω—ã–π –∫–æ–¥\n\n"
        "3. *–ó–∞–≥–∞–¥—ã–≤–∞–Ω–∏–µ –∂–µ–ª–∞–Ω–∏–π:*\n"
        "   - –î–æ–±–∞–≤–ª—è–π —Å–≤–æ–∏ –∂–µ–ª–∞–Ω–∏—è\n"
        "   - –†–µ–¥–∞–∫—Ç–∏—Ä—É–π –∏—Ö\n"
        "   - –°–º–æ—Ç—Ä–∏ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π\n\n"
        "4. *–í–æ–ª—à–µ–±–Ω—ã–µ –≤–µ—Ä—Å–∏–∏:*\n"
        "   - –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è: –¥–æ 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, 1 –∂–µ–ª–∞–Ω–∏–µ\n"
        "   - PRO: –¥–æ 50 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, 5 –∂–µ–ª–∞–Ω–∏–π\n\n"
        "–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –û–±—Ä–∞—Ç–∏—Å—å –∫ –≤–æ–ª—à–µ–±–Ω–∏–∫—É @admin ‚ú®"
    )
    
    if update.callback_query:
        await update.callback_query.message.reply_text(
            help_text,
            parse_mode='Markdown',
            reply_markup=get_main_menu_keyboard()
        )
    else:
        await update.message.reply_text(
            help_text,
            parse_mode='Markdown',
            reply_markup=get_main_menu_keyboard()
        )


async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ callback'–∏
    if query.data in ['free_version', 'pro_version']:
        return
    
    if query.data == 'create_room':
        await handle_room_creation(update, context)
    elif query.data == 'back_to_main':
        await query.message.edit_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá",
            reply_markup=get_main_menu_keyboard()
        )
    elif query.data == 'join_room':
        await join_room(update, context)
    elif query.data == 'create_wish':
        await create_wish(update, context)
    elif query.data == 'edit_wish':
        await edit_wish_handler(update, context)
    elif query.data == 'list_wishes':
        await list_wishes(update, context)
    elif query.data == 'help':
        await help_command(update, context)
    else:
        await query.message.reply_text(
            "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá",
            reply_markup=get_main_menu_keyboard()
        )
